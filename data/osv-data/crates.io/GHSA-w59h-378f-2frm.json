{
  "id": "GHSA-w59h-378f-2frm",
  "summary": "Unsound sending of non-Send types across threads in threadalone",
  "details": "Affected versions can run the `Drop` impl of a non-Send type on a different\nthread than it was created on.\n\nThe flaw occurs when a stderr write performed by the `threadalone` crate fails,\nfor example because stderr is redirected to a location on a filesystem that is\nfull, or because stderr is a pipe that has been closed by the reader.\n\nDropping a non-Send type on the wrong thread is unsound. If used with a type\nsuch as a pthread-based `MutexGuard`, [the consequence is undefined\nbehavior][mutexguard]. If used with `Rc`, there would be a data race on the\nreference count, which is likewise undefined behavior.\n\n[mutexguard]: https://github.com/rust-lang/rust/issues/23465#issuecomment-82730326\n\n",
  "aliases": [
    "RUSTSEC-2024-0005"
  ],
  "modified": "2024-02-10T16:26:49.036729Z",
  "published": "2024-01-23T14:43:35Z",
  "database_specific": {
    "nvd_published_at": null,
    "cwe_ids": [],
    "severity": "MODERATE",
    "github_reviewed": true,
    "github_reviewed_at": "2024-01-23T14:43:35Z"
  },
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/cr0sh/threadalone/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2024-0005.html"
    }
  ],
  "affected": [
    {
      "package": {
        "name": "threadalone",
        "ecosystem": "crates.io",
        "purl": "pkg:cargo/threadalone"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.2.1"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/01/GHSA-w59h-378f-2frm/GHSA-w59h-378f-2frm.json"
      }
    }
  ],
  "schema_version": "1.6.0"
}